from keras.applications.resnet50 import ResNet50
from keras.preprocessing import image
from keras_applications import imagenet_utils
from keras.applications.resnet50 import preprocess_input, decode_predictions
import numpy as np


#Classify images
model = ResNet50(weights='imagenet')
img_path = r"C:\Users\annes\OneDrive\Bureau\data\resized_16_images\Frida_Kahlo_62.jpg"
img = image.load_img(img_path, target_size=(224, 224))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x = preprocess_input(x)
preds = model.predict(x)
print('Predicted:', decode_predictions(preds))

#Extract features from images

from keras.applications.vgg16 import VGG16
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input

model = VGG16(weights='imagenet', include_top=False)

img_path = r"C:\Users\annes\OneDrive\Bureau\data\resized_16_images\Frida_Kahlo_62.jpg"
img = image.load_img(img_path, target_size=(224, 224))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x = preprocess_input(x)

features = model.predict(x)

#Extract features from an arbitrary intermediate layer 

from keras.applications.vgg19 import VGG19
from keras.preprocessing import image
from keras.applications.vgg19 import preprocess_input
from keras.models import Model

base_model = VGG19(weights='imagenet')
model = Model(inputs=base_model.input, outputs=base_model.get_layer('block4_pool').output)

img_path = r"C:\Users\annes\OneDrive\Bureau\data\resized_16_images\Frida_Kahlo_62.jpg"
img = image.load_img(img_path, target_size=(224, 224))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x = preprocess_input(x)

block4_pool_features = model.predict(x)
